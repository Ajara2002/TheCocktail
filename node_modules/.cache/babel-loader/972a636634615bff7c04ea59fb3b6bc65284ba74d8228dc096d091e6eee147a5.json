{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../../Http/Settings\";\nimport Alfavit from \"../../Components/Alfavit/Alfavit\";\nimport AlfavitInfo from \"../../Components/Alfavit-info/Alfavit-info\";\nconst initialState = {\n  latest: [],\n  infoDrink: [],\n  popular: [],\n  popularInfo: [],\n  text: \"\",\n  rondomMeal: [],\n  rondomingredints: [],\n  rondomDri: [],\n  alfavitMeal: [],\n  search: []\n};\nexport const getLatestMeal = createAsyncThunk(\"latest/getLatestMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const mealNumbers = [11007, 11006, 11005, 11004, 11003, 11002, 11001, 11000];\n    const results = await Promise.all(mealNumbers.map(async number => {\n      const result = await instance.get(`lookup.php?i=${number}`);\n      return result.data.drinks;\n    }));\n    const combinedMeals = results.flat();\n    dispatch(latestMeal(combinedMeals));\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});\nexport const getInfoDrink = createAsyncThunk(\"infoDrink/getInfoDrink\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(`lookup.php?i=${elem}`);\n  dispatch(ingoIngredientMeal(result.data.drinks));\n});\nexport const getPopular = createAsyncThunk(\"popular/getPoular\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(\"list.php?i=list\");\n  dispatch(popularMeal(result.data.drinks));\n  dispatch(getRondomingredints(result.data.drinks));\n});\n//?filter.php?i=\nexport const getPopularInfo = createAsyncThunk(\"popularInfo/getPopularInfo\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(`filter.php?i=${elem}`);\n  dispatch(popularInfoMeal(response.data.drinks));\n});\nexport const getRandomMeal = createAsyncThunk(\"rondomMeal/getRandomMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const rondom = [1, 2, 3, 4, 5, 6, 7, 8];\n    const responses = await Promise.all(rondom.map(() => instance.get(\"random.php\")));\n    const randomMealsData = responses.map(response => response.data.drinks[0]);\n    dispatch(getRandom(randomMealsData));\n  } catch (error) {\n    console.error(\"Error fetching random Drinks:\", error);\n  }\n});\nexport const getRondomDri = createAsyncThunk(\"rondomDri/getRondomDri\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const rondom = [1, 2, 3, 4, 5, 6, 7, 8];\n    const responses = await Promise.all(rondom.map(() => instance.get(\"random.php\")));\n    const rondomDri = responses.map(response => response.data.drinks[0].strDrinkThumb);\n    dispatch(getRandom(rondomDri));\n    console.log(\"responses 1>>>\", rondomDri);\n  } catch (error) {\n    console.error(\"Error fetching random Drinks:\", error);\n  }\n});\nexport const getAlfavitMeals = createAsyncThunk(\"alfavitMeal/getAlfavitMeals\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const res = await instance.get(`search.php?f=${elem}`);\n  dispatch(getAlfavitMeal(res.data.drinks));\n});\nexport const getSearchMeals = createAsyncThunk(\"search/getSearchMeals\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const res = await instance.get(`search.php?s=${elem}`);\n  dispatch(getSearchMeal(res.data.drinks));\n});\nconst melSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    latestMeal: (state, action) => {\n      state.latest = action.payload;\n    },\n    ingoIngredientMeal: (state, action) => {\n      state.infoDrink = action.payload;\n    },\n    popularMeal: (state, action) => {\n      state.popular = action.payload;\n    },\n    popularInfoMeal: (state, action) => {\n      state.popularInfo = action.payload;\n    },\n    onDescription: (state, action) => {\n      state.text = action.payload;\n    },\n    getRandom: (state, action) => {\n      state.rondomMeal = action.payload;\n    },\n    getRondomingredints: (state, action) => {\n      state.rondomingredints = action.payload;\n    },\n    getRondomDri: (state, action) => {\n      state.rondomDri = action.payload;\n    },\n    getAlfavitMeal: (state, action) => {\n      state.alfavitInfo = action.payload;\n    },\n    getSearchMeal: (state, action) => {\n      state.search = action.payload;\n    }\n  }\n});\nexport const {\n  latestMeal,\n  ingoIngredientMeal,\n  popularMeal,\n  popularInfoMeal,\n  onDescription,\n  getRandom,\n  getRondomingredints,\n  rondomDri,\n  getAlfavitMeal,\n  getSearchMeal\n} = melSlice.actions;\nexport default melSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","Alfavit","AlfavitInfo","initialState","latest","infoDrink","popular","popularInfo","text","rondomMeal","rondomingredints","rondomDri","alfavitMeal","search","getLatestMeal","_","rejectWithValue","dispatch","mealNumbers","results","Promise","all","map","number","result","get","data","drinks","combinedMeals","flat","latestMeal","error","message","getInfoDrink","elem","ingoIngredientMeal","getPopular","popularMeal","getRondomingredints","getPopularInfo","response","popularInfoMeal","getRandomMeal","rondom","responses","randomMealsData","getRandom","console","getRondomDri","strDrinkThumb","log","getAlfavitMeals","res","getAlfavitMeal","getSearchMeals","getSearchMeal","melSlice","name","reducers","state","action","payload","onDescription","alfavitInfo","actions","reducer"],"sources":["C:/Users/user/Desktop/fullstec/Node_Js/thecocktaidb/src/Redux-toolkit/MealSlice/MealSlice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport instance from \"../../Http/Settings\"\r\nimport Alfavit from \"../../Components/Alfavit/Alfavit\"\r\nimport AlfavitInfo from \"../../Components/Alfavit-info/Alfavit-info\"\r\n\r\nconst initialState={\r\n    latest:[],\r\n    infoDrink:[],\r\n    popular: [],\r\n    popularInfo: [],\r\n    text: \"\",\r\n    rondomMeal:[],\r\n    rondomingredints:[],\r\n    rondomDri:[],\r\n    alfavitMeal:[],\r\n    search: []\r\n}\r\nexport const getLatestMeal=createAsyncThunk(\"latest/getLatestMeal\",async(_,{rejectWithValue,dispatch})=>{\r\n \r\n\r\n    try {\r\n        const mealNumbers=[\r\n          11007,11006,11005,11004,11003,11002,11001,11000\r\n        ]\r\n        const results=await Promise.all(\r\n            mealNumbers.map(async(number)=>{\r\n                const result=await instance.get(`lookup.php?i=${number}`)\r\n                return result.data.drinks\r\n            })\r\n        )\r\n        const combinedMeals=results.flat()\r\n        dispatch(latestMeal(combinedMeals))\r\n    } catch (error) {\r\n        rejectWithValue(error.message) \r\n    }\r\n})\r\nexport const getInfoDrink=createAsyncThunk(\"infoDrink/getInfoDrink\",async(elem,{rejectWithValue,dispatch})=>{\r\n    const result=await instance.get(`lookup.php?i=${elem}`)\r\n    dispatch(ingoIngredientMeal(result.data.drinks))\r\n  })\r\n  export const getPopular = createAsyncThunk(\"popular/getPoular\", async (_, { rejectWithValue, dispatch }) => {\r\n    const result = await instance.get(\"list.php?i=list\")\r\n    dispatch(popularMeal(result.data.drinks))\r\n    dispatch(getRondomingredints(result.data.drinks))\r\n})\r\n//?filter.php?i=\r\nexport const getPopularInfo = createAsyncThunk(\"popularInfo/getPopularInfo\", async (elem, { rejectWithValue, dispatch }) => {\r\n    const response = await instance.get(`filter.php?i=${elem}`)\r\n    dispatch(popularInfoMeal(response.data.drinks))\r\n});\r\nexport const getRandomMeal = createAsyncThunk(\"rondomMeal/getRandomMeal\", async (_, { rejectWithValue, dispatch }) => {\r\n    try {\r\n        const rondom= [1,2,3,4,5,6,7,8]\r\n        const responses = await Promise.all(\r\n        rondom.map(()=>instance.get(\"random.php\"))\r\n        )\r\n        const randomMealsData=responses.map(\r\n            (response)=>response.data.drinks[0]\r\n        )\r\n        dispatch(getRandom(randomMealsData))\r\n    } catch (error) {\r\n       console.error(\"Error fetching random Drinks:\", error)\r\n    }\r\n});\r\nexport const getRondomDri = createAsyncThunk(\"rondomDri/getRondomDri\", async (_, { rejectWithValue, dispatch }) => {\r\n    try {\r\n        const rondom= [1,2,3,4,5,6,7,8]\r\n        const responses = await Promise.all(\r\n        rondom.map(()=>instance.get(\"random.php\"))\r\n        )\r\n        const rondomDri=responses.map(\r\n            (response)=>response.data.drinks[0].strDrinkThumb\r\n        )\r\n        dispatch(getRandom(rondomDri))\r\n        console.log (\"responses 1>>>\",  rondomDri)\r\n    } catch (error) {\r\n       console.error(\"Error fetching random Drinks:\", error)\r\n    }\r\n});\r\n\r\nexport const getAlfavitMeals = createAsyncThunk(\"alfavitMeal/getAlfavitMeals\", async (elem, { rejectWithValue, dispatch }) => {\r\n    const res = await instance.get(`search.php?f=${elem}`)\r\n    dispatch(getAlfavitMeal(res.data.drinks))\r\n});\r\n\r\nexport const getSearchMeals = createAsyncThunk(\r\n    \"search/getSearchMeals\",\r\n    async (elem, { rejectWithValue,dispatch }) => {\r\n      const res=await instance.get(`search.php?s=${elem}`)\r\n      dispatch(getSearchMeal(res.data.drinks))\r\n    }\r\n  );\r\n\r\nconst melSlice=createSlice({\r\n    name:\"products\",\r\n    initialState,\r\n    reducers:{\r\n        latestMeal:(state,action)=>{\r\n            state.latest=action.payload\r\n        },\r\n        ingoIngredientMeal:(state,action)=>{\r\n            state.infoDrink=action.payload\r\n        },\r\n        popularMeal: (state, action) => {\r\n            state.popular = action.payload\r\n        },\r\n        popularInfoMeal: (state, action) => {\r\n            state.popularInfo = action.payload\r\n        },\r\n        onDescription: (state, action) => {\r\n            state.text = action.payload\r\n        },\r\n        getRandom: (state, action) => {\r\n            state.rondomMeal = action.payload\r\n        },\r\n        getRondomingredints: (state, action) => {\r\n            state.rondomingredints = action.payload\r\n        },\r\n        getRondomDri:(state, action) => {\r\n            state.rondomDri = action.payload\r\n        },\r\n        getAlfavitMeal: (state, action) => {\r\n            state.alfavitInfo = action.payload\r\n        },\r\n        getSearchMeal:(state,action)=>{\r\n            state.search=action.payload\r\n          }\r\n    }\r\n})\r\nexport const {latestMeal,\r\n    ingoIngredientMeal,\r\n    popularMeal,\r\n    popularInfoMeal,\r\n    onDescription,\r\n    getRandom, \r\n    getRondomingredints,\r\n    rondomDri,\r\n    getAlfavitMeal,\r\n    getSearchMeal\r\n     }=melSlice.actions\r\n\r\nexport default melSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}