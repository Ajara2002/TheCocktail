{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../../Http/Settings\";\nconst initialState = {\n  latest: [],\n  infoDrink: [],\n  popular: [],\n  popularInfo: [],\n  text: \"\",\n  rondomMeal: [],\n  rondomingredints: [],\n  country: [],\n  drinks: []\n};\nexport const getLatestMeal = createAsyncThunk(\"latest/getLatestMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const mealNumbers = [11007, 11006, 11005, 11004, 11003, 11002, 11001, 11000];\n    const results = await Promise.all(mealNumbers.map(async number => {\n      const result = await instance.get(`lookup.php?i=${number}`);\n      return result.data.drinks;\n    }));\n    const combinedMeals = results.flat();\n    dispatch(latestMeal(combinedMeals));\n    console.log(\"combinedMeals\", combinedMeals);\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});\nexport const getInfoDrink = createAsyncThunk(\"infoDrink/getInfoDrink\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(`lookup.php?i=${elem}`);\n  console.log(\"resultinfoDrink>>>\", result.data.drinks);\n  dispatch(ingoIngredientMeal(result.data.drinks));\n});\nexport const getPopular = createAsyncThunk(\"popular/getPoular\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(\"list.php?i=list\");\n  dispatch(popularMeal(result.data.drinks));\n  dispatch(getRondomingredints(result.data.drinks));\n});\n//?filter.php?i=\nexport const getPopularInfo = createAsyncThunk(\"popularInfo/getPopularInfo\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(`filter.php?i=${elem}`);\n  dispatch(popularInfoMeal(response.data.drinks));\n});\nexport const getRandomMeal = createAsyncThunk(\"rondomMeal/getRandomMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const rondom = [1, 2, 3, 4, 5, 6, 7, 8];\n    const responses = await Promise.all(rondom.map(() => instance.get(\"random.php\")));\n    const randomMealsData = responses.map(response => response.data.drinks[0]);\n    dispatch(getRandom(randomMealsData));\n    console.log(\"responses>>>\", randomMealsData);\n  } catch (error) {\n    console.error(\"Error fetching random Drinks:\", error);\n  }\n});\nexport const getCountryMeals = createAsyncThunk(\"country/getCountryMeals\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(\"list.php?a=list\");\n  dispatch(getCountry(response.data.drinks));\n});\nconst melSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    latestMeal: (state, action) => {\n      state.latest = action.payload;\n    },\n    ingoIngredientMeal: (state, action) => {\n      state.infoDrink = action.payload;\n    },\n    popularMeal: (state, action) => {\n      state.popular = action.payload;\n    },\n    popularInfoMeal: (state, action) => {\n      state.popularInfo = action.payload;\n    },\n    onDescription: (state, action) => {\n      state.text = action.payload;\n    },\n    getRandom: (state, action) => {\n      state.rondomMeal = action.payload;\n    },\n    getRondomingredints: (state, action) => {\n      state.rondomingredints = action.payload;\n    },\n    getCountry: (state, action) => {\n      state.country = action.payload;\n    }\n  }\n});\nexport const {\n  latestMeal,\n  ingoIngredientMeal,\n  popularMeal,\n  popularInfoMeal,\n  onDescription,\n  getRandom,\n  getRondomingredints,\n  getCountry\n} = melSlice.actions;\nexport default melSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","initialState","latest","infoDrink","popular","popularInfo","text","rondomMeal","rondomingredints","country","drinks","getLatestMeal","_","rejectWithValue","dispatch","mealNumbers","results","Promise","all","map","number","result","get","data","combinedMeals","flat","latestMeal","console","log","error","message","getInfoDrink","elem","ingoIngredientMeal","getPopular","popularMeal","getRondomingredints","getPopularInfo","response","popularInfoMeal","getRandomMeal","rondom","responses","randomMealsData","getRandom","getCountryMeals","getCountry","melSlice","name","reducers","state","action","payload","onDescription","actions","reducer"],"sources":["C:/Users/user/Desktop/fullstec/Node_Js/thecocktaidb/src/Redux-toolkit/MealSlice/MealSlice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport instance from \"../../Http/Settings\"\r\n\r\nconst initialState={\r\n    latest:[],\r\n    infoDrink:[],\r\n    popular: [],\r\n    popularInfo: [],\r\n    text: \"\",\r\n    rondomMeal:[],\r\n    rondomingredints:[],\r\n    country: [],\r\n    drinks:[]\r\n}\r\nexport const getLatestMeal=createAsyncThunk(\"latest/getLatestMeal\",async(_,{rejectWithValue,dispatch})=>{\r\n \r\n\r\n    try {\r\n        const mealNumbers=[\r\n          11007,11006,11005,11004,11003,11002,11001,11000\r\n        ]\r\n        const results=await Promise.all(\r\n            mealNumbers.map(async(number)=>{\r\n                const result=await instance.get(`lookup.php?i=${number}`)\r\n                return result.data.drinks\r\n            })\r\n        )\r\n        const combinedMeals=results.flat()\r\n        dispatch(latestMeal(combinedMeals))\r\n        console.log(\"combinedMeals\", combinedMeals)\r\n    } catch (error) {\r\n        rejectWithValue(error.message) \r\n    }\r\n})\r\nexport const getInfoDrink=createAsyncThunk(\"infoDrink/getInfoDrink\",async(elem,{rejectWithValue,dispatch})=>{\r\n    const result=await instance.get(`lookup.php?i=${elem}`)\r\n    console.log (\"resultinfoDrink>>>\", result.data.drinks)\r\n    dispatch(ingoIngredientMeal(result.data.drinks))\r\n  })\r\n  export const getPopular = createAsyncThunk(\"popular/getPoular\", async (_, { rejectWithValue, dispatch }) => {\r\n    const result = await instance.get(\"list.php?i=list\")\r\n    dispatch(popularMeal(result.data.drinks))\r\n    dispatch(getRondomingredints(result.data.drinks))\r\n})\r\n//?filter.php?i=\r\nexport const getPopularInfo = createAsyncThunk(\"popularInfo/getPopularInfo\", async (elem, { rejectWithValue, dispatch }) => {\r\n    const response = await instance.get(`filter.php?i=${elem}`)\r\n    dispatch(popularInfoMeal(response.data.drinks))\r\n});\r\nexport const getRandomMeal = createAsyncThunk(\"rondomMeal/getRandomMeal\", async (_, { rejectWithValue, dispatch }) => {\r\n    try {\r\n        const rondom= [1,2,3,4,5,6,7,8]\r\n        const responses = await Promise.all(\r\n        rondom.map(()=>instance.get(\"random.php\"))\r\n        )\r\n        const randomMealsData=responses.map(\r\n            (response)=>response.data.drinks[0]\r\n        )\r\n        dispatch(getRandom(randomMealsData))\r\n        console.log (\"responses>>>\",  randomMealsData)\r\n    } catch (error) {\r\n       console.error(\"Error fetching random Drinks:\", error)\r\n    }\r\n})\r\nexport const getCountryMeals = createAsyncThunk(\"country/getCountryMeals\", async (_, { rejectWithValue, dispatch }) => {\r\n    const response = await instance.get(\"list.php?a=list\")\r\n    dispatch(getCountry(response.data.drinks))\r\n});\r\n\r\n\r\n\r\nconst melSlice=createSlice({\r\n    name:\"products\",\r\n    initialState,\r\n    reducers:{\r\n        latestMeal:(state,action)=>{\r\n            state.latest=action.payload\r\n        },\r\n        ingoIngredientMeal:(state,action)=>{\r\n            state.infoDrink=action.payload\r\n        },\r\n        popularMeal: (state, action) => {\r\n            state.popular = action.payload\r\n        },\r\n        popularInfoMeal: (state, action) => {\r\n            state.popularInfo = action.payload\r\n        },\r\n        onDescription: (state, action) => {\r\n            state.text = action.payload\r\n        },\r\n        getRandom: (state, action) => {\r\n            state.rondomMeal = action.payload\r\n        },\r\n        getRondomingredints: (state, action) => {\r\n            state.rondomingredints = action.payload\r\n        },\r\n        getCountry: (state, action) => {\r\n            state.country = action.payload\r\n        },\r\n    }\r\n})\r\nexport const {latestMeal,\r\n    ingoIngredientMeal,\r\n    popularMeal,\r\n    popularInfoMeal,\r\n    onDescription,\r\n    getRandom,\r\n    getRondomingredints,\r\n    getCountry\r\n     }=melSlice.actions\r\n\r\nexport default melSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}